Quick Sort Code
Send Feedback
Sort an array A using Quick Sort.
Change in the input array itself. So no need to return or print anything.


Input format :
Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)
Output format :
Array elements in increasing order (separated by space)
Constraints :
1 <= n <= 10^3
Sample Input 1 :
6 
2 6 8 5 4 3
Sample Output 1 :
2 3 4 5 6 8
Sample Input 2 :
5
1 5 2 7 3
Sample Output 2 :
1 2 3 5 7 


void swap(int &a , int &b){
   int temp = a;
    a = b;
    b = temp;
}	
int partition(int input[] , int start , int end){
		int pivot = input[start];
        int low = start;
        for(int i = start+1 ; i<=end ; i++){
            if(input[i]<pivot){
                low++;
                swap(input[low] , input[i]);
                
            }
        }
       swap(input[low] , input[start]);
      return low;

}
				
                  



void quickSortFun(int input[], int start, int end)
	{
    	if(start>=end){
            return ;
        }
   int c = partition(input , start , end);
    quickSortFun(input , start , c-1);
    quickSortFun(input, c+1 , end);
	}

void quickSort(int input[], int size) {
 
    quickSortFun(input , 0 , size-1);

}
