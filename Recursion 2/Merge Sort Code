Merge Sort Code
Send Feedback
Sort an array A using Merge Sort.
Change in the input array itself. So no need to return or print anything.
Input format :
Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)
Output format :
Array elements in increasing order (separated by space)
Constraints :
1 <= n <= 10^3
Sample Input 1 :
6 
2 6 8 5 4 3
Sample Output 1 :
2 3 4 5 6 8
Sample Input 2 :
5
2 1 5 2 3
Sample Output 2 :
1 2 2 3 5 


void merge(int arr[], int start, int mid, int end){
    int temp[end-start+1];
    int k=0;
    int i = start;
    int j=mid+1;
    while(i <= mid && j <= end){
        if(arr[i] < arr[j]){
            temp[k++] = arr[i++];
        } else {
            temp[k++] = arr[j++];
        }
    }
    while(i<=mid){
        temp[k++] = arr[i++];
    }
    while(j<=end){
        temp[k++] = arr[j++];
    }
    int index =0;
    for(int i=start; i<=end;  i++){
        arr[i] = temp[index++];
    }
  
}
void mergeSortFun(int arr[], int start, int end){
    if(start >= end){
        return;
    }
    int mid = (start+end)/2;
    mergeSortFun(arr, start, mid);
    mergeSortFun(arr, mid+1, end);
    merge(arr, start, mid, end);
}
void mergeSort(int input[], int size){
	mergeSortFun(input, 0, size-1);        
}
